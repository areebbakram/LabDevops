# name: Django CI/CD Simple Pipeline

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build-test:
#     name: Build & Test Django App
#     runs-on: ubuntu-latest
#     services:
#       postgres:
#         image: postgres:15
#         env:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: postgres
#           POSTGRES_DB: devops_lab
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd "pg_isready -U postgres"
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5
#       redis:
#         image: redis:7
#         ports:
#           - 6379:6379
#         options: >-
#           --health-cmd "redis-cli ping"
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Run Migrations & Tests
#         env:
#           DATABASE_URL: postgres://postgres:postgres@localhost:5432/devops_lab
#           REDIS_URL: redis://localhost:6379
#         run: |
#           python manage.py migrate
#           python manage.py test

#   docker:
#     name: Build & Push Docker Image
#     runs-on: ubuntu-latest
#     needs: build-test
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build & Push Docker Image
#         run: |
#           docker build -t areebbakram/django-devops-lab:latest .
#           docker push areebbakram/django-devops-lab:latest

# name: Django CI/CD Pipeline

# on:
#   push:
#     branches: ["main"]
#   pull_request:
#     branches: ["main"]

# jobs:
#   build-test:
#     name: Build, Test & Lint Django App
#     runs-on: ubuntu-latest

#     services:
#       db:
#         image: postgres:15
#         env:
#           POSTGRES_DB: django_db
#           POSTGRES_USER: django_user
#           POSTGRES_PASSWORD: django_pass
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd="pg_isready -U django_user -d django_db"
#           --health-interval=10s
#           --health-timeout=5s
#           --health-retries=5

#       redis:
#         image: redis:7
#         ports:
#           - 6379:6379
#         options: >-
#           --health-cmd "redis-cli ping"
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     env:
#       SQL_ENGINE: django.db.backends.postgresql
#       SQL_DATABASE: django_db
#       SQL_USER: django_user
#       SQL_PASSWORD: django_pass
#       SQL_HOST: db
#       SQL_PORT: 5432
#       DJANGO_SETTINGS_MODULE: django_devops_lab.settings
#       PYTHONUNBUFFERED: 1

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: "3.10"

#       - name: Install Dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Run Lint and Security Scan
#         run: |
#           echo "Running flake8 and bandit scans..."
#           flake8 .
#           bandit -r . || true

#       - name: Wait for PostgreSQL
#         run: |
#           echo "Waiting for database..."
#           for i in {1..10}; do
#             nc -z db 5432 && echo "Database is ready!" && break
#             sleep 5
#           done

#       - name: Run Migrations and Tests
#         run: |
#           python manage.py migrate --noinput
#           python manage.py test

#   docker:
#     name: Build & Push Docker Image
#     runs-on: ubuntu-latest
#     needs: build-test

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build Docker Image
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/django-devops-lab:latest .

#       - name: Push Docker Image
#         run: |
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/django-devops-lab:latest


# name: Django CI/CD Pipeline

# on:
#   push:
#     branches: ["main"]
#   pull_request:
#     branches: ["main"]

# jobs:
#   build-test:
#     name: Build, Test & Lint Django App
#     runs-on: ubuntu-latest

#     services:
#       db:
#         image: postgres:15
#         env:
#           POSTGRES_DB: django_db
#           POSTGRES_USER: django_user
#           POSTGRES_PASSWORD: django_pass
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd="pg_isready -U django_user -d django_db"
#           --health-interval=10s
#           --health-timeout=5s
#           --health-retries=5

#       redis:
#         image: redis:7
#         ports:
#           - 6379:6379
#         options: >-
#           --health-cmd "redis-cli ping"
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     env:
#       SQL_ENGINE: django.db.backends.postgresql
#       SQL_DATABASE: django_db
#       SQL_USER: django_user
#       SQL_PASSWORD: django_pass
#       SQL_HOST: db
#       SQL_PORT: 5432
#       DJANGO_SETTINGS_MODULE: django_devops_lab.settings
#       PYTHONUNBUFFERED: 1

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: "3.10"

#       - name: Install Dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Run Lint and Security Scan
#         run: |
#           echo "Running flake8 and bandit scans..."
#           flake8 . || true   # do not fail on lint warnings
#           bandit -r . || true

#       - name: Wait for PostgreSQL
#         run: |
#           echo "Waiting for database..."
#           for i in {1..10}; do
#             nc -z db 5432 && echo "Database is ready!" && break
#             sleep 5
#           done

#       - name: Run Migrations and Tests
#         env:
#           SQL_ENGINE: ${{ env.SQL_ENGINE }}
#           SQL_DATABASE: ${{ env.SQL_DATABASE }}
#           SQL_USER: ${{ env.SQL_USER }}
#           SQL_PASSWORD: ${{ env.SQL_PASSWORD }}
#           SQL_HOST: ${{ env.SQL_HOST }}
#           SQL_PORT: ${{ env.SQL_PORT }}
#         run: |
#           python manage.py migrate --noinput
#           python manage.py test

#   docker:
#     name: Build & Push Docker Image
#     runs-on: ubuntu-latest
#     needs: build-test

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build Docker Image
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/django-devops-lab:latest .

#       - name: Push Docker Image
#         run: |
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/django-devops-lab:latest

# name: Django CI/CD Pipeline

# on:
#   push:
#     branches: ["main"]
#   pull_request:
#     branches: ["main"]

# jobs:
#   build-test:
#     name: Build, Test & Lint Django App
#     runs-on: ubuntu-latest

#     services:
#       db:
#         image: postgres:15
#         env:
#           POSTGRES_DB: django_db
#           POSTGRES_USER: django_user
#           POSTGRES_PASSWORD: django_pass
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd="pg_isready -U django_user -d django_db"
#           --health-interval=5s
#           --health-timeout=5s
#           --health-retries=20

#       redis:
#         image: redis:7
#         ports:
#           - 6379:6379
#         options: >-
#           --health-cmd "redis-cli ping"
#           --health-interval 5s
#           --health-timeout 5s
#           --health-retries 10

#     env:
#       SQL_ENGINE: django.db.backends.postgresql
#       SQL_DATABASE: django_db
#       SQL_USER: django_user
#       SQL_PASSWORD: django_pass
#       SQL_HOST: db
#       SQL_PORT: 5432
#       DJANGO_SETTINGS_MODULE: django_devops_lab.settings
#       PYTHONUNBUFFERED: 1

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: "3.10"

#       - name: Install Dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Run Lint and Security Scan
#         run: |
#           echo "Running flake8 and bandit scans..."
#           flake8 . || true   # do not fail on lint warnings
#           bandit -r . || true

#       - name: Wait for PostgreSQL to be Ready
#         run: |
#           echo "Waiting for database to be ready..."
#           until pg_isready -h db -U django_user -d django_db; do
#             echo "Database is unavailable - sleeping"
#             sleep 5
#           done
#           echo "Database is ready!"

#       - name: Run Migrations and Tests
#         env:
#           SQL_ENGINE: ${{ env.SQL_ENGINE }}
#           SQL_DATABASE: ${{ env.SQL_DATABASE }}
#           SQL_USER: ${{ env.SQL_USER }}
#           SQL_PASSWORD: ${{ env.SQL_PASSWORD }}
#           SQL_HOST: ${{ env.SQL_HOST }}
#           SQL_PORT: ${{ env.SQL_PORT }}
#         run: |
#           python manage.py migrate --noinput
#           python manage.py test

#   docker:
#     name: Build & Push Docker Image
#     runs-on: ubuntu-latest
#     needs: build-test

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build Docker Image
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/django-devops-lab:latest .

#       - name: Push Docker Image
#         run: |
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/django-devops-lab:latest



# name: Django CI/CD Pipeline

# on:
#   push:
#     branches: ["main"]
#   pull_request:
#     branches: ["main"]

# jobs:
#   build-test:
#     name: Build, Test & Lint Django App
#     runs-on: ubuntu-latest

#     services:
#       db:
#         image: postgres:15
#         env:
#           POSTGRES_DB: django_db
#           POSTGRES_USER: django_user
#           POSTGRES_PASSWORD: django_pass
#         options: >-
#           --health-cmd="pg_isready -U django_user -d django_db"
#           --health-interval=10s
#           --health-timeout=5s
#           --health-retries=10

#       redis:
#         image: redis:7
#         ports:
#           - 6379:6379
#         options: >-
#           --health-cmd "redis-cli ping"
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     env:
#       SQL_ENGINE: django.db.backends.postgresql
#       SQL_DATABASE: django_db
#       SQL_USER: django_user
#       SQL_PASSWORD: django_pass
#       SQL_HOST: db
#       SQL_PORT: 5432
#       DJANGO_SETTINGS_MODULE: django_devops_lab.settings
#       PYTHONUNBUFFERED: 1

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: "3.10"

#       - name: Install Dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Run Lint and Security Scan
#         run: |
#           echo "Running flake8 and bandit scans..."
#           flake8 . || true
#           bandit -r . || true

#       - name: Wait for PostgreSQL
#         run: |
#           echo "Waiting for database to be ready..."
#           for i in {1..30}; do
#             pg_isready -h db -U django_user -d django_db && echo "Database is ready!" && break
#             echo "Database is unavailable - sleeping"
#             sleep 5
#           done

#       - name: Run Migrations and Tests
#         env:
#           SQL_ENGINE: ${{ env.SQL_ENGINE }}
#           SQL_DATABASE: ${{ env.SQL_DATABASE }}
#           SQL_USER: ${{ env.SQL_USER }}
#           SQL_PASSWORD: ${{ env.SQL_PASSWORD }}
#           SQL_HOST: ${{ env.SQL_HOST }}
#           SQL_PORT: ${{ env.SQL_PORT }}
#         run: |
#           echo "Running migrations..."
#           python manage.py migrate --noinput
#           echo "Running tests..."
#           python manage.py test

#   docker:
#     name: Build & Push Docker Image
#     runs-on: ubuntu-latest
#     needs: build-test

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build Docker Image
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/django-devops-lab:latest .

#       - name: Push Docker Image
#         run: |
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/django-devops-lab:latest



name: Django CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-test:
    name: Build, Test & Lint Django App
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_DB: django_db
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U django_user -d django_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      SQL_ENGINE: django.db.backends.postgresql
      SQL_DATABASE: django_db
      SQL_USER: django_user
      SQL_PASSWORD: django_pass
      SQL_HOST: ${{ job.services.db.hostname }}
      SQL_PORT: 5432
      DJANGO_SETTINGS_MODULE: django_devops_lab.settings
      PYTHONUNBUFFERED: 1

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Lint and Security Scan
        run: |
          echo "Running flake8 and bandit scans..."
          flake8 . || true   # do not fail on lint warnings
          bandit -r . || true

      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for database to be ready..."
          for i in {1..30}; do
            pg_isready -h ${{ job.services.db.hostname }} -U django_user -d django_db && echo "Database is ready!" && break
            echo "Database is unavailable - sleeping"
            sleep 5
          done

      - name: Run Migrations and Tests
        env:
          SQL_ENGINE: ${{ env.SQL_ENGINE }}
          SQL_DATABASE: ${{ env.SQL_DATABASE }}
          SQL_USER: ${{ env.SQL_USER }}
          SQL_PASSWORD: ${{ env.SQL_PASSWORD }}
          SQL_HOST: ${{ env.SQL_HOST }}
          SQL_PORT: ${{ env.SQL_PORT }}
        run: |
          echo "Running migrations..."
          python manage.py migrate --noinput
          echo "Running tests..."
          python manage.py test

  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/django-devops-lab:latest .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/django-devops-lab:latest
